#include "opencv2/imgproc.hpp"
#include "opencv2/highgui.hpp"
#include <opencv2/video.hpp>
#include <iostream>
using namespace cv;
using namespace std;

// Global variables
Mat frame;                          //current frame
Mat fgMaskMOG2;                     //fg mask fg mask generated by MOG2 method
Ptr<BackgroundSubtractor> pMOG2;    //MOG2 Background subtractor

void processVideo(int webcam) {
    //create the capture object
    VideoCapture capture;
    capture.open(webcam);
    capture >> frame;

    //create Background Subtractor objects
    pMOG2 = createBackgroundSubtractorMOG2(); //MOG2 approach

    //read input data. ESC or 'q' for quitting
    for (;;) {
        //read the current frame
        capture >> frame;
        //update the background model
        pMOG2->apply(frame, fgMaskMOG2);
        //show the current frame and the fg masks
        imshow("Frame", frame);
        imshow("FG Mask MOG 2", fgMaskMOG2);
        waitKey(30);
    }
    //delete capture object
    capture.release();
}

int main(int argc, char** argv) {
    if(argc != 2) {
        cout << "Usage: ./bg <webcam id>" << endl;
        cout << "Notice: this requirs your webcam!" << endl;
        return EXIT_FAILURE;
    }
    //create GUI windows
    namedWindow("Frame");
    namedWindow("FG Mask MOG 2");

    processVideo(atoi(argv[1]));

    //destroy GUI windows
    destroyAllWindows();
    return EXIT_SUCCESS;
}
